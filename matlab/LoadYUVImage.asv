function [rows, cols, data] = LoadYUVImage(pathToFile)
%LOADYUVIMAGE Load a YUV binary file into memory.
% No reshaping or resizing of the data is done, so the return data
% will simply be an array of bytes.
% Inputs:
%   pathToFile: /some/path/to/a/yuv.bin
% Returns:
%   rows, cols, data

data = [];
rows = 0;
cols = 0;
fid = fopen(pathToFile, 'rb');
if fid < 0
    return;
end


% Read the number of rows. In the cerberus data logger (first 4 bytes)
numRows = fread(fid, 1, 'int32');  % Read 4 bytes as a 32-bit integer
if isempty(numRows)
    error('Could not read the number of rows.');
end

% Step 3: Read the number of columns (next 4 bytes)
numCols = fread(fid, 1, 'int32');  % Read 4 bytes as a 32-bit integer
if isempty(numCols)
    error('Could not read the number of columns.');
end


% Step 4: Read the matrix data (remaining bytes)
numElements = numRows * numCols;
% If we dont put the * here matlab will read in each byte and then convert
% to a double type. The value will be correct, but the type would be wrong 
data = fread(fid, numElements, '*uint8'); 

yuvImg = reshape(data, numRows, numCols);

fclose(fid);
end

